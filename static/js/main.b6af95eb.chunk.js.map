{"version":3,"sources":["components/data.js","components/Card.js","components/CardGrid.js","components/CardApp.js","App.js","index.js"],"names":["images","randomImg","all","init","i","push","randomPushImg","randomNumber","Math","floor","random","length","includes","randomize","Card","isPair","ind","handleClick","useState","select","setSelect","id","className","src","alt","color","onClick","setTimeout","CardGrid","matched","map","_","CardApp","first","second","setMatched","win","setWin","oneClicked","clicked","comparer","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b6af95eb.chunk.js","sourcesContent":["/*  GETTING IMAGES */\r\nlet images = [];\r\n\r\n/* RANDOM IMAGES */\r\nlet randomImg = [];\r\n\r\n/* ALL POSSIBILITIES TO WIN  */\r\nconst all = [\r\n  [0, 0],\r\n  [1, 1],\r\n  [2, 2],\r\n  [3, 3],\r\n  [4, 4],\r\n  [5, 5],\r\n  [6, 6],\r\n  [7, 7],\r\n  [8, 8],\r\n  [9, 9]\r\n];\r\nconst init = () => {\r\n  /* CLEANING */\r\n  images = [];\r\n  randomImg = [];\r\n  /*  GETTING IMAGES */\r\n  for (let i = 1; i <= 10; i++) {\r\n    if (i < 10) {\r\n      images.push(\r\n        `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/00${i}.png`\r\n      );\r\n    } else {\r\n      images.push(\r\n        `https://assets.pokemon.com/assets/cms2/img/pokedex/detail/0${i}.png`\r\n      );\r\n    }\r\n  }\r\n\r\n  /* RANDOM IMAGES */\r\n  const randomPushImg = () => {\r\n    let randomNumber = Math.floor(Math.random() * images.length);\r\n    if (randomImg.includes(randomNumber)) return;\r\n    else {\r\n      randomImg.push(randomNumber);\r\n    }\r\n  };\r\n\r\n  const randomize = () => {\r\n    while (randomImg.length < 10) {\r\n      randomPushImg();\r\n    }\r\n  };\r\n\r\n  randomize();\r\n};\r\ninit();\r\nexport { images, randomImg, all, init };\r\n","import { useState } from \"react\";\r\nimport { CgPokemon } from \"react-icons/cg\";\r\nexport default function Card({ isPair, images, randomImg, ind, handleClick }) {\r\n  const [select, setSelect] = useState(false);\r\n\r\n  const reverse = () => {\r\n    setSelect(true);\r\n\r\n    setTimeout(() => {\r\n      setSelect(false);\r\n    }, 2500);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id={ind} className={`card ${select && \"select\"}`}>\r\n        <img\r\n          className={`${select ? \"visible rotate stop\" : \"hidden\"} ${\r\n            isPair && \"visible pair stop\"\r\n          } `}\r\n          src={images[randomImg[ind]]}\r\n          alt=\"pokemon\"\r\n        />\r\n        {!isPair && (\r\n          <CgPokemon\r\n            color=\"gold\"\r\n            className={`icon ${select ? \"hidden\" : \"visible\"}`}\r\n            onClick={() => {\r\n              if (isPair) {\r\n                setSelect(true);\r\n              } else {\r\n                reverse();\r\n              }\r\n\r\n              handleClick(ind);\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import Card from \"./Card\";\r\nexport default function CardGrid({ randomImg, matched, images, handleClick }) {\r\n  return randomImg.map((_, ind) => {\r\n    let isPair = false;\r\n    if (matched.includes(ind)) {\r\n      isPair = true;\r\n    }\r\n\r\n    return (\r\n      <Card\r\n        key={ind}\r\n        isPair={isPair}\r\n        images={images}\r\n        randomImg={randomImg}\r\n        ind={ind}\r\n        handleClick={handleClick}\r\n      />\r\n    );\r\n  });\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { images, randomImg, all, init } from \"./data\";\r\nimport CardGrid from \"./CardGrid\";\r\n\r\nconst CardApp = () => {\r\n  const [matched, setMatched] = useState([]);\r\n  const [win, setWin] = useState(false);\r\n\r\n  /* HANDLE PAIR */\r\n\r\n  let first;\r\n  let second;\r\n  let oneClicked = false;\r\n  let clicked = [null, null];\r\n\r\n  const comparer = () => {\r\n    for (let i = 0; i <= all.length - 1; i++) {\r\n      if (all[i][0] === clicked[0] && all[i][1] === clicked[1]) {\r\n        setMatched([...matched, clicked[0]]);\r\n        clicked = [null, null];\r\n      }\r\n    }\r\n  };\r\n\r\n  /* HANDLE WIN */\r\n\r\n  const checkWin = () => {\r\n    if (matched.length === 9 && clicked[0] === clicked[1]) {\r\n      setWin(true);\r\n    }\r\n  };\r\n\r\n  /* HANDLE ON CLICK */\r\n\r\n  const handleClick = (ind) => {\r\n    if (oneClicked === false) {\r\n      oneClicked = true;\r\n      first = ind;\r\n      setTimeout(() => {\r\n        first = null;\r\n      }, 2000);\r\n    } else {\r\n      oneClicked = false;\r\n      second = ind;\r\n      setTimeout(() => {\r\n        second = null;\r\n      }, 2000);\r\n    }\r\n    clicked = [first, second];\r\n\r\n    if (clicked[0] !== null && clicked[1] !== null) {\r\n      comparer();\r\n    }\r\n    checkWin(ind);\r\n  };\r\n\r\n  return (\r\n    <main className={`${win && \"win\"}`}>\r\n      {win && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-info\">\r\n            <h1>You win!</h1>\r\n            <button\r\n              className=\"modal-button\"\r\n              onClick={() => {\r\n                setWin(false);\r\n                setMatched([]);\r\n                init();\r\n              }}\r\n            >\r\n              <p>Play Again</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div className=\"title\">\r\n        <h1>Memory Game w/ Poke</h1>\r\n      </div>\r\n      <div className=\"CardApp\">\r\n        <div className=\"row-one\">\r\n          <CardGrid\r\n            matched={matched}\r\n            randomImg={randomImg}\r\n            handleClick={handleClick}\r\n            images={images}\r\n          />\r\n        </div>\r\n        <div className=\"row-two\">\r\n          <CardGrid\r\n            matched={matched}\r\n            randomImg={randomImg}\r\n            handleClick={handleClick}\r\n            images={images}\r\n          />\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\nexport default CardApp;\r\n","import CardApp from \"./components/CardApp\";\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <CardApp />\r\n    </>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}